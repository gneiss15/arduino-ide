name: Arduino2 IDE (Linux-AppImage-Build)
on:
  push:
  workflow_dispatch:
env:
  NODE_VERSION: '18.17'
  YARN_VERSION: '1.22'
  GO_VERSION: '1.21'
jobs:
  build:
    name: build Linux
    runs-on: ubuntu-latest
    container: { "image": "ghcr.io/arduino/arduino-ide/linux:main" }
    defaults:
      run:
        shell: bash
    timeout-minutes: 90
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        registry-url: 'https://registry.npmjs.org'
    - name: Install Yarn
      run: npm install --global "yarn@${{ env.YARN_VERSION }}"
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Install Taskfile
      uses: arduino/setup-task@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        version: 3.x
    - name: Package
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      working-directory: './'
      run: |
        set -x
        set -v
        npx node-gyp install
        yarn install
        yarn --cwd arduino-ide-extension build
        yarn --cwd electron-app rebuild
        yarn --cwd electron-app build
        yarn --cwd electron-app package
        find . -iname "*.AppImage"
    - name: Upload to GitHub Releases
      run: |
        set -x
        set -v
        apt update
        apt install -y gh jq
        TAG_List=$(gh release list -R "$GITHUB_REPOSITORY" --json tagName | jq -r 'map(select(true))[] | (.tagName)')
        TAG="${GITHUB_REF#refs/tags/}"
        for i in $TAG_List; do
          if [[ "$i" = "$TAG"; then
            gh release delete "$TAG" -y
          fi
        done
        gh release create "$TAG" *.AppImage* --title "$TAG"

