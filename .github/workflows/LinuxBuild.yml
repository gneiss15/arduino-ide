name: Arduino2 IDE (Linux-Build)
on:
  workflow_dispatch:
env:
  # See vars.GO_VERSION field of https://github.com/arduino/arduino-cli/blob/master/DistTasks.yml
  GO_VERSION: '1.21'
  # See: https://github.com/actions/setup-node/#readme
  NODE_VERSION: '18.17'
  YARN_VERSION: '1.22'
  JOB_TRANSFER_ARTIFACT_PREFIX: build-artifacts-
  CHANGELOG_ARTIFACTS: changelog
  STAGED_CHANNEL_FILE_ARTIFACT_PREFIX: staged-channel-file-
  BASE_BUILD_DATA: |
    - config:
        name: Linux
        runs-on: ubuntu-latest
        container: |
          {
            \"image\": \"ghcr.io/arduino/arduino-ide/linux:main\"
          }
        job-transfer-artifact-suffix: Linux_64bit
        mergeable-channel-file: 'false'
      artifacts:
        - path: '*Linux_64bit.zip'
          name: Linux_X86-64_zip
        - path: '*Linux_64bit.AppImage'
          name: Linux_X86-64_app_image
jobs:
#build_matrix="$( echo "${{ env.BASE_BUILD_DATA }}" | yq --output-format json '[.[].config]' )"
#[
#  {
#    "name": "Linux",
#    "runs-on": "ubuntu-latest",
#    "container": "{\n  \\\"image\\\": \\\"ghcr.io/arduino/arduino-ide/linux:main\\\"\n}\n",
#    "job-transfer-artifact-suffix": "Linux_64bit",
#    "mergeable-channel-file": "false"
#  }
#]
#artifact_matrix="$( echo "${{ env.BASE_BUILD_DATA }}" | yq --output-format json 'map(.artifacts[] + (.config | pick(["job-transfer-artifact-suffix"])))' )"
#[
#  {
#    "path": "*Linux_64bit.zip",
#    "name": "Linux_X86-64_zip",
#    "job-transfer-artifact-suffix": "Linux_64bit"
#  },
#  {
#    "path": "*Linux_64bit.AppImage",
#    "name": "Linux_X86-64_app_image",
#    "job-transfer-artifact-suffix": "Linux_64bit"
#  }
#]

  build:
    name: build Linux
    env:
      # Location of artifacts generated by build.
      BUILD_ARTIFACTS_PATH: electron-app/dist/build-artifacts
    #strategy:
    #  matrix:
    #    config: ${{ fromJson(needs.select-targets.outputs.build-matrix) }}
    runs-on: ubuntu-latest
    container: { "image": "ghcr.io/arduino/arduino-ide/linux:main" }
    defaults:
      run:
        shell: bash

    timeout-minutes: 90

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Show
        if: runner.name != 'WINDOWS-SIGN-PC'
        run: |
          set -x
          set -v
          echo cache: ${{ fromJSON(env.BASE_BUILD_DATA.config.container) == null && 'yarn' || null }}

